***************************************************************************************************************************************
------------------------------Tile0:---------------------------------
In SO;
	1-> T0S0L2 + T0S0L1
		2 + 1 = 3
	2-> T0S1L9 cp
		 = 19
	3-> T0S0L1 + T0S0L4
		19 + 4 = 1D
	4-> nop	; Also store T1S0 result in L9
				 = 1006 in L9
	5-> T0S0L9 + T0S0L5
		1006 + 5 = 100B

In S1; 
	1-> T0S1L0 + T0S1L1
		10 + 11 = 21
	2->	T0S1L9 nop T0S1L3
		nop , loaded 19 , 13
	3-> T0S2L4 + T0S0L4
		104 + 4 = 108

	4-> T0S1L6 + ToS1L7	; Store result from T1S1 in L9
		16 + 17 = 2D , 0 in L9
	5-> nop

In S2;
	1-> T0S1L0 max T0S1L1
		10 max 11 = 11
	2-> T0S2L2 + T0S1L3
		102 + 13 = 115
	3-> T0S2L4 cp T0S2L5
		104 cp 105 = 104
	4-> T0S1L6 cp T0S2L6 ; Store T1S2 result in L9
		16 cp 106 = 16 ; 2AAAC in L9
	5-> nop

------------------------------Tile1:---------------------------------
In SO;
	1-> T1S0L0 + T1S0L1 
		1000 + 1001 = 2001
	2-> T1S0L3 - T1S0L2 
		1003 - 1002 = 1
	3-> T1S0L4 * T1S0L5 
		1004 * 1005 = 1009014
	4-> T1S0L6 cp
		 = 1006
	5-> T1S0L7 max T1S0L8 
		1007 max 1008 = 1008
In S1;
	1-> T1S1L0 + T1S1L1 
		10000 + 10001 = 20001
	2-> T1S1L2 - T1S1L3 
		10002 - 10003 = -1
	3-> T1S1L4 min T1S1L5 
		10004 min 10005 = 10004
	4-> T1S1L6 > T1S1L7 
		10006 > 10007 = 0
	5-> T1S1L8 < T1S1L9 
        10008 < 10009 = 1
In S2;
	1-> T1S2L0 + T1S2L1 
		100000 + 100001 = 200001 ; also store this result at L7
	2-> T1S2L9 - T1S2L3 
		100009 - 100003 = 6
	3-> T1S2L4 == T1S2L5 
        100004 == 100005 = 0
	4-> T1S2L9 / T1S2L1 
        100009 / 6 = 2AAAC.2AAAAAAAB = 2AAAC
	5-> T0S2L0 == T0S2L7 
		200001 == 200001 = 1

***************************************************************************************************************************************

 - Branching and primitive functionality
 - Mathematical correctness of all primitives 



